// Goでの戻り値となる変数に名前をつける( named return value )こともできる。
// 戻り値に名前をつけると、関数の最初で定義した変数名として扱われる。

// この戻り値の名前は、戻り値の意味を示す名前とすることで、関数のドキュメントとして表現するようにする。
// 名前をつけた戻り値の変数を使うと、 return ステートメントに何も書かずに戻すことができる。
// これを "naked" return と呼ぶ。

// ただしnaked returnステートメントは、短い関数でのみ利用すべき。
// 長い関数で使うと可読性が低くなる。そもそもチームによっては使われないので、
// こういう書き方もあるんだなー程度でOK。

package main

import (
	"fmt"
)

func split(sum int) (x, y int) {
	x = sum * 4 / 9
	y = sum - x
	return // 本来ならreturn x, y と書くが、戻り値に名前を指定しているので省略ができる。
	// ただし returnだけだとなにこれってなるのであまり使わない方がいいかも。
	// 戻り値で名前をつけててもreturn x, yと書くこともできる。
	// またreturn y, xの場合はyの値が戻り値のxとして、xの値が戻り値のyとして扱われる。
}

func main() {
	fmt.Println(split(17))
}